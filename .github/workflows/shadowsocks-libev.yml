name: shadowsocks-libev

on:
  push:
    branches: 
      - master
    schedule:
      - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build shadowsocks-libev firmware

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y install libsodium* mbedtls* gettext build-essential autoconf automake libtool openssl libssl-dev zlib1g-dev libpcre3-dev libev-dev libc-ares-dev
		  sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: Compile firmware
        run: |
		  ./configure
          make -j$(nproc) || make -j1
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./src
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          cp -rf $(find ./src/ -type f -name "ss-*") ./artifact/firmware/
      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: ss_firmware
          path: ./artifact/firmware/  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
